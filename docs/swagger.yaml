basePath: /msapi/package
host: localhost:3000
info:
  contact:
    email: ortelius-dev@googlegroups.com
    name: Ortelius Google Group
  description: |-
    RestAPI for the package Object
    ![Release](https://img.shields.io/github/v/release/ortelius/scec-deppkg?sort=semver)
    ![license](https://img.shields.io/github/license/ortelius/scec-deppkg)

    ![Build](https://img.shields.io/github/actions/workflow/status/ortelius/scec-deppkg/build-push-chart.yml)
    [![MegaLinter](https://github.com/ortelius/scec-deppkg/workflows/MegaLinter/badge.svg?branch=main)](https://github.com/ortelius/scec-deppkg/actions?query=workflow%3AMegaLinter+branch%3Amain)
    ![CodeQL](https://github.com/ortelius/scec-deppkg/workflows/CodeQL/badge.svg)
    [![OpenSSF-Scorecard](https://api.securityscorecards.dev/projects/github.com/ortelius/scec-deppkg/badge)](https://api.securityscorecards.dev/projects/github.com/ortelius/scec-deppkg)

    ![Discord](https://img.shields.io/discord/722468819091849316)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ortelius v11 Package Microservice
  version: 11.0.0
paths:
  /msapi/package:
    get:
      consumes:
      - '*/*'
      description: Get a list of Packages.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get a List of Packages
      tags:
      - Packages
  /msapi/package/:key:
    get:
      consumes:
      - '*/*'
      description: Get a package based on the _key or name.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get a Package
      tags:
      - package
  /msapi/provenance:
    post:
      consumes:
      - application/json
      description: Create a new Provenance and persist it
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Upload Provenance JSON
      tags:
      - provenance
  /msapi/sbom:
    post:
      consumes:
      - application/json
      description: Create a new SBOM and persist it
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Upload an SBOM
      tags:
      - sbom
swagger: "2.0"
